# ビルドシステムの設定
[build-system]
# Pythonパッケージングツールの指定
requires = ["hatchling"]  # モダンなビルドシステム
build-backend = "hatchling.build"  # ビルドバックエンドの指定

# プロジェクトの基本情報
[project]
name = "genai-tag-db-tools"  # パッケージ名 ハイフン推奨なぜかは知らん
version = "0.1.0"  # バージョン番号
description = "AI生成画像のタグ管理ツール"  # プロジェクトの説明
requires-python = ">=3.12"  # 必要なPythonバージョン
SQLAlchemy = ">=2.0.0"  # データベースライブラリ

# 必要なパッケージの依存関係
dependencies = [
    "PySide6>=6.8.0.2",        # Qt GUIフレームワーク
    "superqt>=0.6.7",          # PySide6の拡張機能
    "polars[all]>=1.9.0",           # 高性能データフレームライブラリ [all] は全機能をインストール必要ない部分は後で削る
    "alembic>=1.13.1",         # データベースマイグレーションツール
]

# プロジェクトの分類情報
classifiers = [
    "Operating System :: Microsoft :: Windows :: Windows 11"  # 対応OS
]

# 開発時のみ必要な追加パッケージ
[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",          # テストフレームワーク
    "pytest-cov>=6.0.0",      # テストカバレッジツール
    "pytest-qt",        # Qtアプリケーションのテストツール
    "sphinx",           # ドキュメント生成ツール
    "sphinx-rtd-theme", # Sphinxのテーマ
]

[tool.ruff]
exclude = [
    "*/genai_tag_db_tools/config.py", # 改行位置を変更されるととても見づらい
    "*/__pycache__",
    "*/tests/*",
    "*/shibokensupport/*",
    "*/site-packages/*",
    "*/pyscript",
    "*/signature_bootstrap.py",
    "*/__init__.py",
]

# pytestの設定オプション
[tool.pytest.ini_options]
pythonpath = ["genai_tag_db_tools"]          # テスト実行時のPythonパス
addopts ="""
    -ra -q -v
    --cov=genai_tag_db_tools
    --cov-report=term-missing tests/
    """

# テスト実行時のオプション（結果表示の詳細度など）
testpaths = ["tests"]          # テストファイルの場所

[tool.coverage.run]
source = ["genai_tag_db_tools"]
omit = [
    "*/shibokensupport/*",
    "*/site-packages/*",
    "*/tests/*",
    "*/pyscript",
    "*/signature_bootstrap.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == \"__main__\":",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

# ビルド設定
[tool.hatch.build.targets.wheel]
packages = ["genai_tag_db_tools"] # Pythonパッケージ名（アンダースコア）

[tool.hatch.build.targets.wheel.package-data]
genai_tag_db_tools = ["data/*.db"]

# プロジェクトスクリプト
[project.scripts]
genai-tag-db-tools = "genai_tag_db_tools.main:main"
#インストールして genai_tag_db_tools をターミナルで入力するとmainが実行されるよという話

# Pyright（静的型チェッカー）の設定
[tool.pyright]
include = ["genai_tag_db_tools"]             # 型チェック対象
exclude = [                   # 型チェック除外対象
    "**/__pycache__",
    "test"
]
typeCheckingMode = "basic"  # 型チェックの厳格さ

# PySide6関連の特別な設定
reportGeneralTypeIssues = "warning"     # 一般的な型の問題を警告として報告
reportMissingTypeStubs = false          # 型定義ファイルの不足を無視
reportUnknownMemberType = false         # 不明なメンバー型を無視
